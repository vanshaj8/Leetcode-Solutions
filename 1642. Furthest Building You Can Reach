class Solution {
public:
    int furthestBuilding(vector<int>& heights, int bricks, int ladders) 
    {
        
        priority_queue<int> pq;
        int i;
        for(i=0;i<heights.size()-1;i++)
        {
            if(heights[i+1]<=heights[i])
            {
                continue;
            }
            int diff=heights[i+1]-heights[i];
            if(bricks>=diff)
            {
                bricks-=diff;
                pq.push(diff);
            }
            else if(ladders>0)
            {
                if(pq.size())
                {
                    int x=pq.top();
                    if(x>diff)
                    {
                        pq.pop();
                        bricks+=x;
                        bricks-=diff;
                        pq.push(diff);
                    }
                }
                ladders--;
            }
            else break;
        }
        
     return i;   
    }
};
