/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder)
    {
        
        return helper(0,0,inorder.size()-1,preorder,inorder);
    }
    
    TreeNode* helper(int ps,int is,int iend,vector<int>&preorder,vector<int>&inorder)
    {
        if(ps>preorder.size()|| is>iend)
        {
            return NULL;
        }
        
        TreeNode* root=new TreeNode(preorder[ps]);
        int index=0;
        for(int i=is;i<=iend;i++)
        {
            if(root->val==inorder[i])
            {
                index=i;
                break;
            }
        }
        
        root->left=helper(ps+1,is,index-1,preorder,inorder);
        root->right=helper(ps+index-is+1,index+1,iend,preorder,inorder);
        
        return root;
    }
};
