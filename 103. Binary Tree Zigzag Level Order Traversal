/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root)
    {
        vector<vector<int>> ans;
        if(root==NULL)
        {
            return ans;
        }
        
        stack<TreeNode*>current;
        stack<TreeNode*>next;
        bool lr=true;
        current.push(root);
        while(!current.empty())
        {
            TreeNode* temp=current.top();
            vector<int>res;
            if(temp)
            {
               int size=current.size();
                {
                    res.push_back(temp->val);
                }
                if(lr)
                {
                    if(temp->left )
                    {
                        next.push(root->left);
                    }
                    if(root->right)
                    {
                        next.push(root->right);
                    }
                }
                else
                {
                    if(root->right)
                    {
                        next.push(root->right);
                    }
                    else
                    {
                        next.push(root->left);
                    }
                }
            }
            if(current.empty())
            {
                lr=!lr;
                swap(current,next);
            }
            ans.push_back(res);
            res.clear();
        }
        
        return ans;
        
    }
};
