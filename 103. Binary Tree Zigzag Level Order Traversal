/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) 
    {
        vector<vector<int>>ans;
        stack<TreeNode*>current;
        stack<TreeNode*>next;
        TreeNode* curr;
        bool flag=true;
        vector<int>res;
        if(!root)
        {
            return ans;
        }
        current.push(root);
        while(!current.empty())
        {
            int size=current.size();
            res.clear();
            for(int i=0;i<size;i++)
            {
                if(flag==false)
                {
                    curr=current.top();
                    current.pop();
                    res.push_back(curr->val);
                    if(curr->right)
                    {
                        next.push(curr->right);
                    }
                    if(curr->left)
                    {
                        next.push(curr->left);
                    }
                }
                else
                {
                    curr=current.top();
                    current.pop();
                    res.push_back(curr->val);
                    if(curr->left)
                    {
                        next.push(curr->left);
                    }
                    if(curr->right)
                    {
                        next.push(curr->right);
                    }
                    
                }
            }
            ans.push_back(res);
            flag=!flag;
            swap(current,next);
        }
        return ans;
    }
};
