/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class FindElements {
public:
    unordered_map<int,int> m;
    
    void construct(TreeNode* root,int value)
    {
        if(!root)
        {
            return;
        }
        root->val=value;
        m[value]=1;
        construct(root->left,2*value+1);
        construct(root->right,2*value+2);
    }
    FindElements(TreeNode* root)
    {
    construct(root,0);
    }
    
    bool find(int target) 
    {
       if(m[target]==1)
       {
           return true;
       }
        else
        {
            return false;
        }
    }
};

/**
 * Your FindElements object will be instantiated and called as such:
 * FindElements* obj = new FindElements(root);
 * bool param_1 = obj->find(target);
 */
