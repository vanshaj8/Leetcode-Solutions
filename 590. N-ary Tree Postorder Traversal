/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    vector<int> postorder(Node* root) 
    {
        vector<int>ans;
        if(root==NULL)
        {
            return ans;
        }
        stack<Node*> s1;
        stack<int>s2;
        s1.push(root);
        Node* node;
        while(!s1.empty())
        {
            node=s1.top();
            s1.pop();
            s2.push(node->val);
            
            for(auto i=node->children.begin();i!=node->children.end();i++)
            {
                s1.push(*i);
            }
            
        }
        
        while(!s2.empty())
        {
            ans.push_back(s2.top());
            s2.pop();
        }
        
        return ans;
    }
};
