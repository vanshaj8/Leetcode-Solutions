/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution 
{
public:
    void construct(TreeNode* root,int value)
    {
        if(root->val>value)
        {
            if(root->left)
            {
                construct(root->left,value);
            }
            else
            {
                root->left=new TreeNode(value);
            }
        }
        else if(root->val<value)
        {
            if(root->right)
            {
                construct(root->right,value);
            }
            else
            {
                root->right=new TreeNode(value);
            }
        }
        
        
    }
    TreeNode* bstFromPreorder(vector<int>& nums) 
    {

        TreeNode* root= new TreeNode(nums[0]);
        for(int i=1;i<nums.size();i++)
        {
            construct(root,nums[i]);
        }
        
        return root;
    }
};
